import numpy as np
import matplotlib.pyplot as plt


np.random.seed(42)

# Parameters
num_experiments = 10000  
n_train = 2              # n = 2 for each experiment
x0 = 0.5  

# True function
def f(x):
    return x ** 2

# Storage for predictions at x0
g_x0 = np.zeros(num_experiments)

for i in range(num_experiments):
    
    x_train = np.random.uniform(-1, 1, n_train)
    y_train = f(x_train)
    
    x1, x2 = x_train
    y1, y2 = y_train
    
    
    a = x1 + x2
    b = - x1 * x2
    
    g_x0[i] = a * x0 + b

E_g_x0 = np.mean(g_x0)
Bias_sq_numerical = (E_g_x0 - f(x0)) ** 2
Variance_numerical = np.var(g_x0)


Bias_sq_analytical = x0 ** 4
Variance_analytical = ((2 * x0 ** 2) / 3) + 1 / 9

print(f"Analytical Bias^2 = {Bias_sq_analytical:.5f}")
print(f"Numerical Bias^2 = {Bias_sq_numerical:.5f}\n")

print(f"Analytical Variance = {Variance_analytical:.5f}")
print(f"Numerical Variance = {Variance_numerical:.5f}\n")
